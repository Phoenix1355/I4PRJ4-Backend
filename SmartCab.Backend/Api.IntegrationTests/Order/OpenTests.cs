using System;
using System.Collections.Generic;
using System.Net;
using System.Text;
using System.Threading.Tasks;
using Api.BusinessLogicLayer.Responses;
using NUnit.Framework;
using NUnit.Framework.Internal;

namespace Api.IntegrationTests.Order
{
    class OpenTests : IntegrationSetup
    {

        [Test]
        public async Task Open_NoOrderInDatabase_ReturnsEmptyList()
        {
            //Make request
            var response = await _client.GetAsync("api/order/open");
            var openOrderResponse = GetObject<OpenOrdersResponse>(response);

            Assert.That(openOrderResponse.Orders, Is.Empty);
        }

        [Test]
        public async Task Open_NoOrderInDatabase_ReturnsOkStatus()
        {
            //Make request
            var response = await _client.GetAsync("api/order/open");
            var openOrderResponse = GetObject<OpenOrdersResponse>(response);

            Assert.That(response.StatusCode, Is.EqualTo(HttpStatusCode.OK));
        }

        [Test]
        public async Task Open_1OrderInDatabaseWithStatusWaitingForAccept_Returns1Order()
        {
            //Setup database

            //Make request
            var response = await _client.GetAsync("api/order/open");
            //Assert
        }

        [Test]
        public async Task Open_1OrderInDatabaseWithStatusAccepted_ReturnsEmptyList()
        {
            //Setup database

            //Make request
            var response = await _client.GetAsync("api/order/open");
            //Assert
        }

        [Test]
        public async Task Open_OrdersInDatabaseWithOneOfEachStatus_Returns1Element()
        {

            //Setup database

            //Make request
            var response = await _client.GetAsync("api/order/open");
            //Assert      
        }

        [Test]
        public async Task Open_1SharedOrderAnd1SoloOrderInDatabaseWithStatusWaitingForAccepted_ReturnsBoth()
        {
            //Setup database

            //Make request
            var response = await _client.GetAsync("api/order/open");
            //Assert
        }
    }
}
